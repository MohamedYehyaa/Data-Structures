{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOJ5K4Rd0juhBrNRt3JOW9m",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/MohamedYehyaa/Data-Structures/blob/master/transform\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "Ea2HSc19WFI1"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.metrics.pairwise import cosine_similarity\n",
        "from sklearn.feature_extraction.text import CountVectorizer"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "G6rCRaHhXJjT",
        "outputId": "8f894768-d7c1-40b7-8b6c-af6e1a7b25b2"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Unnamed: 0         UserID   Gender  LocationID     City    State StateCode  \\\n",
              "0           0  tw-1267804344  Unknown         1.0  Elbasan  Elbasan        AL   \n",
              "1           1    tw-27229880     Male         2.0   Tirana   Tirane        AL   \n",
              "2           2    tw-27229880     Male         2.0   Tirana   Tirane        AL   \n",
              "3           3    tw-27229880     Male         2.0   Tirana   Tirane        AL   \n",
              "4           4    tw-27229880     Male         2.0   Tirana   Tirane        AL   \n",
              "\n",
              "   Country                TweetID  Hour  Day   Weekday  IsReshare  Reach  \\\n",
              "0  Albania  tw-698155297102295041     7   12    Friday       True  339.0   \n",
              "1  Albania  tw-685159757209059329    11    7  Thursday      False   87.0   \n",
              "2  Albania  tw-686907710311378944     6   12   Tuesday      False   87.0   \n",
              "3  Albania  tw-686968158050201600    10   12   Tuesday      False   87.0   \n",
              "4  Albania  tw-690210449674092545     9   21  Thursday      False   85.0   \n",
              "\n",
              "   RetweetCount  Likes  Klout  Sentiment Lang  \\\n",
              "0         127.0    0.0   44.0        0.0   en   \n",
              "1           0.0    0.0   22.0        0.0   en   \n",
              "2           0.0    0.0   22.0        0.0   en   \n",
              "3           0.0    0.0   22.0        0.0   en   \n",
              "4           0.0    0.0   21.0        0.0   en   \n",
              "\n",
              "                                                text  \n",
              "0  \"RT @AdrianRusso82: Our Innovation Lab is offi...  \n",
              "1  Now Open  AWS Asia Pacific (Seoul) Region via ...  \n",
              "2  A Beginner's Guide to Scaling to 11 Million+ U...  \n",
              "3  Bridging AWS and Azure environments via VPN vi...  \n",
              "4  ELK on AWS ElasticSearch Service + ElasticBean...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-45591211-3ef4-4aea-a0f4-49ecd6cfcbef\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>UserID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>LocationID</th>\n",
              "      <th>City</th>\n",
              "      <th>State</th>\n",
              "      <th>StateCode</th>\n",
              "      <th>Country</th>\n",
              "      <th>TweetID</th>\n",
              "      <th>Hour</th>\n",
              "      <th>Day</th>\n",
              "      <th>Weekday</th>\n",
              "      <th>IsReshare</th>\n",
              "      <th>Reach</th>\n",
              "      <th>RetweetCount</th>\n",
              "      <th>Likes</th>\n",
              "      <th>Klout</th>\n",
              "      <th>Sentiment</th>\n",
              "      <th>Lang</th>\n",
              "      <th>text</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>tw-1267804344</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Elbasan</td>\n",
              "      <td>Elbasan</td>\n",
              "      <td>AL</td>\n",
              "      <td>Albania</td>\n",
              "      <td>tw-698155297102295041</td>\n",
              "      <td>7</td>\n",
              "      <td>12</td>\n",
              "      <td>Friday</td>\n",
              "      <td>True</td>\n",
              "      <td>339.0</td>\n",
              "      <td>127.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>44.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>\"RT @AdrianRusso82: Our Innovation Lab is offi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>Male</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Tirana</td>\n",
              "      <td>Tirane</td>\n",
              "      <td>AL</td>\n",
              "      <td>Albania</td>\n",
              "      <td>tw-685159757209059329</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>False</td>\n",
              "      <td>87.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>Now Open  AWS Asia Pacific (Seoul) Region via ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>Male</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Tirana</td>\n",
              "      <td>Tirane</td>\n",
              "      <td>AL</td>\n",
              "      <td>Albania</td>\n",
              "      <td>tw-686907710311378944</td>\n",
              "      <td>6</td>\n",
              "      <td>12</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>False</td>\n",
              "      <td>87.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>A Beginner's Guide to Scaling to 11 Million+ U...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>Male</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Tirana</td>\n",
              "      <td>Tirane</td>\n",
              "      <td>AL</td>\n",
              "      <td>Albania</td>\n",
              "      <td>tw-686968158050201600</td>\n",
              "      <td>10</td>\n",
              "      <td>12</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>False</td>\n",
              "      <td>87.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>Bridging AWS and Azure environments via VPN vi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>Male</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Tirana</td>\n",
              "      <td>Tirane</td>\n",
              "      <td>AL</td>\n",
              "      <td>Albania</td>\n",
              "      <td>tw-690210449674092545</td>\n",
              "      <td>9</td>\n",
              "      <td>21</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>False</td>\n",
              "      <td>85.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>ELK on AWS ElasticSearch Service + ElasticBean...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-45591211-3ef4-4aea-a0f4-49ecd6cfcbef')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-45591211-3ef4-4aea-a0f4-49ecd6cfcbef button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-45591211-3ef4-4aea-a0f4-49ecd6cfcbef');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2b4a73c8-8553-47ab-9044-7d64afab5e90\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2b4a73c8-8553-47ab-9044-7d64afab5e90')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2b4a73c8-8553-47ab-9044-7d64afab5e90 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 2
        }
      ],
      "source": [
        "data=pd.read_csv('/content/tweets-engagement-metrics.csv')\n",
        "data.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uNiyB3QvXJnq",
        "outputId": "90d263f1-5df9-4815-b1ee-20261d799aba"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 102062 entries, 0 to 102061\n",
            "Data columns (total 20 columns):\n",
            " #   Column        Non-Null Count   Dtype  \n",
            "---  ------        --------------   -----  \n",
            " 0   Unnamed: 0    102062 non-null  int64  \n",
            " 1   UserID        102062 non-null  object \n",
            " 2   Gender        102062 non-null  object \n",
            " 3   LocationID    102062 non-null  float64\n",
            " 4   City          99783 non-null   object \n",
            " 5   State         100165 non-null  object \n",
            " 6   StateCode     100336 non-null  object \n",
            " 7   Country       102062 non-null  object \n",
            " 8   TweetID       102062 non-null  object \n",
            " 9   Hour          102062 non-null  int64  \n",
            " 10  Day           102062 non-null  int64  \n",
            " 11  Weekday       102062 non-null  object \n",
            " 12  IsReshare     102062 non-null  bool   \n",
            " 13  Reach         102062 non-null  float64\n",
            " 14  RetweetCount  102062 non-null  float64\n",
            " 15  Likes         102062 non-null  float64\n",
            " 16  Klout         102062 non-null  float64\n",
            " 17  Sentiment     102062 non-null  float64\n",
            " 18  Lang          102062 non-null  object \n",
            " 19  text          102062 non-null  object \n",
            "dtypes: bool(1), float64(6), int64(3), object(10)\n",
            "memory usage: 14.9+ MB\n"
          ]
        }
      ],
      "source": [
        "data.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "81qow5xaXI91",
        "outputId": "b02ecaf6-632f-425b-fed6-4a5b91aa9460"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Unnamed: 0         0\n",
              "UserID             0\n",
              "Gender             0\n",
              "LocationID         0\n",
              "City            2279\n",
              "State           1897\n",
              "StateCode       1726\n",
              "Country            0\n",
              "TweetID            0\n",
              "Hour               0\n",
              "Day                0\n",
              "Weekday            0\n",
              "IsReshare          0\n",
              "Reach              0\n",
              "RetweetCount       0\n",
              "Likes              0\n",
              "Klout              0\n",
              "Sentiment          0\n",
              "Lang               0\n",
              "text               0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ],
      "source": [
        "data.isnull().sum()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['UserID'].nunique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SIqmEx0RXId5",
        "outputId": "8de043d5-db82-455d-c5ac-dd6d3ea62b60"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "33212"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['Lang'].nunique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dH2-y2L4XxHz",
        "outputId": "502f9bcc-798b-4095-f6d5-779e33527bac"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "36"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['Lang'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xTQUW2VeXxPa",
        "outputId": "1e1939d8-6a74-4849-baf7-d92ff59f41ac"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['en', 'es', '_u', 'pt', 'in', 'it', 'fr', 'ro', 'da', 'zh', 'ko',\n",
              "       'tl', 'de', 'ja', 'ru', 'nl', 'hu', 'cy', 'km', 'ar', 'cs', 'ht',\n",
              "       'fi', 'et', 'no', 'pl', 'eu', 'lv', 'sv', 'tr', 'hi', 'iw', 'lt',\n",
              "       'sl', 'uk', 'th'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "value_counts = data['Lang'].value_counts()\n",
        "count_specific_value = value_counts.get('en', 0)\n",
        "count_specific_value"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D4knyplBXxR9",
        "outputId": "378ba427-bf32-4c38-b1f7-c2f42ab4e2a0"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "93564"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_en_only = data[data['Lang'] == 'en']\n",
        "data_en_only"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 860
        },
        "id": "ejMisv2qXxZb",
        "outputId": "3993ff6a-f7d7-49f7-85c6-76d2c8153631"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Unnamed: 0         UserID   Gender  LocationID      City  \\\n",
              "0                0  tw-1267804344  Unknown         1.0   Elbasan   \n",
              "1                1    tw-27229880     Male         2.0    Tirana   \n",
              "2                2    tw-27229880     Male         2.0    Tirana   \n",
              "3                3    tw-27229880     Male         2.0    Tirana   \n",
              "4                4    tw-27229880     Male         2.0    Tirana   \n",
              "...            ...            ...      ...         ...       ...   \n",
              "102057      102057     tw-8184962     Male      6288.0    Harare   \n",
              "102058      102058  tw-2510632527  Unknown      6288.0    Harare   \n",
              "102059      102059   tw-148753637  Unknown      6288.0    Harare   \n",
              "102060      102060   tw-448919812   Unisex      6288.0    Harare   \n",
              "102061      102061   tw-252561397  Unknown      6289.0  Bulawayo   \n",
              "\n",
              "                  State StateCode   Country                TweetID  Hour  Day  \\\n",
              "0               Elbasan        AL   Albania  tw-698155297102295041     7   12   \n",
              "1                Tirane        AL   Albania  tw-685159757209059329    11    7   \n",
              "2                Tirane        AL   Albania  tw-686907710311378944     6   12   \n",
              "3                Tirane        AL   Albania  tw-686968158050201600    10   12   \n",
              "4                Tirane        AL   Albania  tw-690210449674092545     9   21   \n",
              "...                 ...       ...       ...                    ...   ...  ...   \n",
              "102057  Harare Province        ZW  Zimbabwe  tw-696378029526933504    10    7   \n",
              "102058  Harare Province        ZW  Zimbabwe  tw-686895097175228416     5   12   \n",
              "102059  Harare Province        ZW  Zimbabwe  tw-709632884269785088     0   15   \n",
              "102060  Harare Province        ZW  Zimbabwe  tw-705055534920163328     8    2   \n",
              "102061         Bulawayo        ZW  Zimbabwe  tw-701487153818238976    12   21   \n",
              "\n",
              "          Weekday  IsReshare   Reach  RetweetCount  Likes  Klout  Sentiment  \\\n",
              "0          Friday       True   339.0         127.0    0.0   44.0        0.0   \n",
              "1        Thursday      False    87.0           0.0    0.0   22.0        0.0   \n",
              "2         Tuesday      False    87.0           0.0    0.0   22.0        0.0   \n",
              "3         Tuesday      False    87.0           0.0    0.0   22.0        0.0   \n",
              "4        Thursday      False    85.0           0.0    0.0   21.0        0.0   \n",
              "...           ...        ...     ...           ...    ...    ...        ...   \n",
              "102057     Sunday       True  1203.0           3.0    0.0   44.0        3.0   \n",
              "102058    Tuesday       True   976.0         102.0    0.0   31.0        0.0   \n",
              "102059    Tuesday      False  4876.0           0.0    0.0   49.0        1.0   \n",
              "102060  Wednesday       True   188.0           5.0    0.0   37.0        0.0   \n",
              "102061     Sunday       True   199.0           3.0    0.0   23.0        0.0   \n",
              "\n",
              "       Lang                                               text  \n",
              "0        en  \"RT @AdrianRusso82: Our Innovation Lab is offi...  \n",
              "1        en  Now Open  AWS Asia Pacific (Seoul) Region via ...  \n",
              "2        en  A Beginner's Guide to Scaling to 11 Million+ U...  \n",
              "3        en  Bridging AWS and Azure environments via VPN vi...  \n",
              "4        en  ELK on AWS ElasticSearch Service + ElasticBean...  \n",
              "...     ...                                                ...  \n",
              "102057   en  RT @Springcoil: Does anyone have a good workfl...  \n",
              "102058   en  RT @linuxacademyCOM: AWS CSA Associate and Pro...  \n",
              "102059   en  Curious @benthompson does this change your opi...  \n",
              "102060   en  RT @awscloud: New on the AWS Startup Blog - Wh...  \n",
              "102061   en  RT @ICTAfrica1: 15 Top Paying IT Certification...  \n",
              "\n",
              "[93564 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5efa85b2-7f88-400a-aa5e-5f198435d2f6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>UserID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>LocationID</th>\n",
              "      <th>City</th>\n",
              "      <th>State</th>\n",
              "      <th>StateCode</th>\n",
              "      <th>Country</th>\n",
              "      <th>TweetID</th>\n",
              "      <th>Hour</th>\n",
              "      <th>Day</th>\n",
              "      <th>Weekday</th>\n",
              "      <th>IsReshare</th>\n",
              "      <th>Reach</th>\n",
              "      <th>RetweetCount</th>\n",
              "      <th>Likes</th>\n",
              "      <th>Klout</th>\n",
              "      <th>Sentiment</th>\n",
              "      <th>Lang</th>\n",
              "      <th>text</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>tw-1267804344</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Elbasan</td>\n",
              "      <td>Elbasan</td>\n",
              "      <td>AL</td>\n",
              "      <td>Albania</td>\n",
              "      <td>tw-698155297102295041</td>\n",
              "      <td>7</td>\n",
              "      <td>12</td>\n",
              "      <td>Friday</td>\n",
              "      <td>True</td>\n",
              "      <td>339.0</td>\n",
              "      <td>127.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>44.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>\"RT @AdrianRusso82: Our Innovation Lab is offi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>Male</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Tirana</td>\n",
              "      <td>Tirane</td>\n",
              "      <td>AL</td>\n",
              "      <td>Albania</td>\n",
              "      <td>tw-685159757209059329</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>False</td>\n",
              "      <td>87.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>Now Open  AWS Asia Pacific (Seoul) Region via ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>Male</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Tirana</td>\n",
              "      <td>Tirane</td>\n",
              "      <td>AL</td>\n",
              "      <td>Albania</td>\n",
              "      <td>tw-686907710311378944</td>\n",
              "      <td>6</td>\n",
              "      <td>12</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>False</td>\n",
              "      <td>87.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>A Beginner's Guide to Scaling to 11 Million+ U...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>Male</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Tirana</td>\n",
              "      <td>Tirane</td>\n",
              "      <td>AL</td>\n",
              "      <td>Albania</td>\n",
              "      <td>tw-686968158050201600</td>\n",
              "      <td>10</td>\n",
              "      <td>12</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>False</td>\n",
              "      <td>87.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>Bridging AWS and Azure environments via VPN vi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>Male</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Tirana</td>\n",
              "      <td>Tirane</td>\n",
              "      <td>AL</td>\n",
              "      <td>Albania</td>\n",
              "      <td>tw-690210449674092545</td>\n",
              "      <td>9</td>\n",
              "      <td>21</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>False</td>\n",
              "      <td>85.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>ELK on AWS ElasticSearch Service + ElasticBean...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102057</th>\n",
              "      <td>102057</td>\n",
              "      <td>tw-8184962</td>\n",
              "      <td>Male</td>\n",
              "      <td>6288.0</td>\n",
              "      <td>Harare</td>\n",
              "      <td>Harare Province</td>\n",
              "      <td>ZW</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>tw-696378029526933504</td>\n",
              "      <td>10</td>\n",
              "      <td>7</td>\n",
              "      <td>Sunday</td>\n",
              "      <td>True</td>\n",
              "      <td>1203.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>44.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>en</td>\n",
              "      <td>RT @Springcoil: Does anyone have a good workfl...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102058</th>\n",
              "      <td>102058</td>\n",
              "      <td>tw-2510632527</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>6288.0</td>\n",
              "      <td>Harare</td>\n",
              "      <td>Harare Province</td>\n",
              "      <td>ZW</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>tw-686895097175228416</td>\n",
              "      <td>5</td>\n",
              "      <td>12</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>True</td>\n",
              "      <td>976.0</td>\n",
              "      <td>102.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>31.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>RT @linuxacademyCOM: AWS CSA Associate and Pro...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102059</th>\n",
              "      <td>102059</td>\n",
              "      <td>tw-148753637</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>6288.0</td>\n",
              "      <td>Harare</td>\n",
              "      <td>Harare Province</td>\n",
              "      <td>ZW</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>tw-709632884269785088</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>False</td>\n",
              "      <td>4876.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>49.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>en</td>\n",
              "      <td>Curious @benthompson does this change your opi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102060</th>\n",
              "      <td>102060</td>\n",
              "      <td>tw-448919812</td>\n",
              "      <td>Unisex</td>\n",
              "      <td>6288.0</td>\n",
              "      <td>Harare</td>\n",
              "      <td>Harare Province</td>\n",
              "      <td>ZW</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>tw-705055534920163328</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>Wednesday</td>\n",
              "      <td>True</td>\n",
              "      <td>188.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>37.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>RT @awscloud: New on the AWS Startup Blog - Wh...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102061</th>\n",
              "      <td>102061</td>\n",
              "      <td>tw-252561397</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>6289.0</td>\n",
              "      <td>Bulawayo</td>\n",
              "      <td>Bulawayo</td>\n",
              "      <td>ZW</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>tw-701487153818238976</td>\n",
              "      <td>12</td>\n",
              "      <td>21</td>\n",
              "      <td>Sunday</td>\n",
              "      <td>True</td>\n",
              "      <td>199.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>23.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>RT @ICTAfrica1: 15 Top Paying IT Certification...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>93564 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5efa85b2-7f88-400a-aa5e-5f198435d2f6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5efa85b2-7f88-400a-aa5e-5f198435d2f6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5efa85b2-7f88-400a-aa5e-5f198435d2f6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a488b6d6-0584-408b-8686-65dc04b9108a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a488b6d6-0584-408b-8686-65dc04b9108a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a488b6d6-0584-408b-8686-65dc04b9108a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_b7d939f7-ea36-4926-95b3-95e8e3104e9d\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data_en_only')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_b7d939f7-ea36-4926-95b3-95e8e3104e9d button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('data_en_only');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data_en_only",
              "summary": "{\n  \"name\": \"data_en_only\",\n  \"rows\": 93564,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29370,\n        \"min\": 0,\n        \"max\": 102061,\n        \"num_unique_values\": 93564,\n        \"samples\": [\n          22843,\n          31586,\n          12325\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"UserID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 29925,\n        \"samples\": [\n          \"tw-785989596\",\n          \"tw-815286\",\n          \"tw-27452424\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Male\",\n          \"Unisex\",\n          \"Unknown\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LocationID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1314.1742875983161,\n        \"min\": 1.0,\n        \"max\": 6289.0,\n        \"num_unique_values\": 3881,\n        \"samples\": [\n          5408.0,\n          1838.0,\n          5075.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3402,\n        \"samples\": [\n          \"Nanaimo\",\n          \"Linkping\",\n          \"Piedmont\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 912,\n        \"samples\": [\n          \"Borough of Brighton and Hove\",\n          \"Newtownabbey District\",\n          \"OErebro\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"StateCode\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 352,\n        \"samples\": [\n          \"GB-S5\",\n          \"SS\",\n          \"GY\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 141,\n        \"samples\": [\n          \"Kyrgyzstan\",\n          \"Saint Vincent and the Grenadines\",\n          \"Cuba\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TweetID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 91885,\n        \"samples\": [\n          \"tw-713773258181455873\",\n          \"tw-701143805102321664\",\n          \"tw-687626245220208646\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hour\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 0,\n        \"max\": 23,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          4,\n          19,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1,\n        \"max\": 31,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          13,\n          24,\n          18\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weekday\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Friday\",\n          \"Thursday\",\n          \"Sunday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsReshare\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reach\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 91048.94169957908,\n        \"min\": 0.0,\n        \"max\": 10342452.0,\n        \"num_unique_values\": 11498,\n        \"samples\": [\n          2470.0,\n          1223.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RetweetCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101.1808141040737,\n        \"min\": 0.0,\n        \"max\": 26127.0,\n        \"num_unique_values\": 478,\n        \"samples\": [\n          2065.0,\n          131.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Likes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.6696963038890176,\n        \"min\": 0.0,\n        \"max\": 133.0,\n        \"num_unique_values\": 87,\n        \"samples\": [\n          89.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Klout\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.72652042556005,\n        \"min\": 0.0,\n        \"max\": 99.0,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          73.0,\n          44.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sentiment\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.081177466142916,\n        \"min\": -6.0,\n        \"max\": 7.333333,\n        \"num_unique_values\": 87,\n        \"samples\": [\n          6.333333,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lang\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"en\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 64099,\n        \"samples\": [\n          \"#Docker #container wars btwn #GOOGLE #AWS but look at #MSFT #Azure 's solution @Sphere3D at: http://www.sphere3d.com/microsoft-glassware-promotion/ https://twitter.com/barrynj730/status/697124834883596288\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_en_only['text'].nunique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "owet7xdfXxc6",
        "outputId": "f8068632-bed9-4980-c091-88ae65f50afd"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "64099"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_filter= data_en_only.drop_duplicates(subset=['text'])\n",
        "data_filter"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 930
        },
        "id": "kPga0gimXxfT",
        "outputId": "ac3d4e12-7af9-49c6-ab32-8da3219b7843"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Unnamed: 0         UserID   Gender  LocationID     City  \\\n",
              "0                0  tw-1267804344  Unknown         1.0  Elbasan   \n",
              "1                1    tw-27229880     Male         2.0   Tirana   \n",
              "2                2    tw-27229880     Male         2.0   Tirana   \n",
              "3                3    tw-27229880     Male         2.0   Tirana   \n",
              "4                4    tw-27229880     Male         2.0   Tirana   \n",
              "...            ...            ...      ...         ...      ...   \n",
              "102054      102054    tw-95376359   Unisex      6287.0    Ndola   \n",
              "102055      102055   tw-456489877   Female      6288.0   Harare   \n",
              "102056      102056  tw-4504473976   Unisex      6288.0   Harare   \n",
              "102057      102057     tw-8184962     Male      6288.0   Harare   \n",
              "102059      102059   tw-148753637  Unknown      6288.0   Harare   \n",
              "\n",
              "                  State StateCode   Country                TweetID  Hour  Day  \\\n",
              "0               Elbasan        AL   Albania  tw-698155297102295041     7   12   \n",
              "1                Tirane        AL   Albania  tw-685159757209059329    11    7   \n",
              "2                Tirane        AL   Albania  tw-686907710311378944     6   12   \n",
              "3                Tirane        AL   Albania  tw-686968158050201600    10   12   \n",
              "4                Tirane        AL   Albania  tw-690210449674092545     9   21   \n",
              "...                 ...       ...       ...                    ...   ...  ...   \n",
              "102054       Copperbelt        ZM    Zambia  tw-702581824921477120    12   24   \n",
              "102055  Harare Province        ZW  Zimbabwe  tw-711965535320276993    11   21   \n",
              "102056  Harare Province        ZW  Zimbabwe  tw-693440798403268613     7   30   \n",
              "102057  Harare Province        ZW  Zimbabwe  tw-696378029526933504    10    7   \n",
              "102059  Harare Province        ZW  Zimbabwe  tw-709632884269785088     0   15   \n",
              "\n",
              "          Weekday  IsReshare   Reach  RetweetCount  Likes  Klout  Sentiment  \\\n",
              "0          Friday       True   339.0         127.0    0.0   44.0        0.0   \n",
              "1        Thursday      False    87.0           0.0    0.0   22.0        0.0   \n",
              "2         Tuesday      False    87.0           0.0    0.0   22.0        0.0   \n",
              "3         Tuesday      False    87.0           0.0    0.0   22.0        0.0   \n",
              "4        Thursday      False    85.0           0.0    0.0   21.0        0.0   \n",
              "...           ...        ...     ...           ...    ...    ...        ...   \n",
              "102054  Wednesday      False  1229.0           0.0    0.0   41.0        4.0   \n",
              "102055     Monday      False   479.0           0.0    0.0   43.0        0.0   \n",
              "102056   Saturday      False     6.0           0.0    0.0   14.0        2.0   \n",
              "102057     Sunday       True  1203.0           3.0    0.0   44.0        3.0   \n",
              "102059    Tuesday      False  4876.0           0.0    0.0   49.0        1.0   \n",
              "\n",
              "       Lang                                               text  \n",
              "0        en  \"RT @AdrianRusso82: Our Innovation Lab is offi...  \n",
              "1        en  Now Open  AWS Asia Pacific (Seoul) Region via ...  \n",
              "2        en  A Beginner's Guide to Scaling to 11 Million+ U...  \n",
              "3        en  Bridging AWS and Azure environments via VPN vi...  \n",
              "4        en  ELK on AWS ElasticSearch Service + ElasticBean...  \n",
              "...     ...                                                ...  \n",
              "102054   en  I'm really really intrigued by stripe atlas......  \n",
              "102055   en  @sir_ritz Not sure about that but they plan to...  \n",
              "102056   en  Haha...tbc (me)has done it again.3 wickets hat...  \n",
              "102057   en  RT @Springcoil: Does anyone have a good workfl...  \n",
              "102059   en  Curious @benthompson does this change your opi...  \n",
              "\n",
              "[64099 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f8baa65b-c503-4a99-bdb1-028ffb176db2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>UserID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>LocationID</th>\n",
              "      <th>City</th>\n",
              "      <th>State</th>\n",
              "      <th>StateCode</th>\n",
              "      <th>Country</th>\n",
              "      <th>TweetID</th>\n",
              "      <th>Hour</th>\n",
              "      <th>Day</th>\n",
              "      <th>Weekday</th>\n",
              "      <th>IsReshare</th>\n",
              "      <th>Reach</th>\n",
              "      <th>RetweetCount</th>\n",
              "      <th>Likes</th>\n",
              "      <th>Klout</th>\n",
              "      <th>Sentiment</th>\n",
              "      <th>Lang</th>\n",
              "      <th>text</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>tw-1267804344</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Elbasan</td>\n",
              "      <td>Elbasan</td>\n",
              "      <td>AL</td>\n",
              "      <td>Albania</td>\n",
              "      <td>tw-698155297102295041</td>\n",
              "      <td>7</td>\n",
              "      <td>12</td>\n",
              "      <td>Friday</td>\n",
              "      <td>True</td>\n",
              "      <td>339.0</td>\n",
              "      <td>127.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>44.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>\"RT @AdrianRusso82: Our Innovation Lab is offi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>Male</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Tirana</td>\n",
              "      <td>Tirane</td>\n",
              "      <td>AL</td>\n",
              "      <td>Albania</td>\n",
              "      <td>tw-685159757209059329</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>False</td>\n",
              "      <td>87.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>Now Open  AWS Asia Pacific (Seoul) Region via ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>Male</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Tirana</td>\n",
              "      <td>Tirane</td>\n",
              "      <td>AL</td>\n",
              "      <td>Albania</td>\n",
              "      <td>tw-686907710311378944</td>\n",
              "      <td>6</td>\n",
              "      <td>12</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>False</td>\n",
              "      <td>87.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>A Beginner's Guide to Scaling to 11 Million+ U...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>Male</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Tirana</td>\n",
              "      <td>Tirane</td>\n",
              "      <td>AL</td>\n",
              "      <td>Albania</td>\n",
              "      <td>tw-686968158050201600</td>\n",
              "      <td>10</td>\n",
              "      <td>12</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>False</td>\n",
              "      <td>87.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>Bridging AWS and Azure environments via VPN vi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>Male</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Tirana</td>\n",
              "      <td>Tirane</td>\n",
              "      <td>AL</td>\n",
              "      <td>Albania</td>\n",
              "      <td>tw-690210449674092545</td>\n",
              "      <td>9</td>\n",
              "      <td>21</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>False</td>\n",
              "      <td>85.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>ELK on AWS ElasticSearch Service + ElasticBean...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102054</th>\n",
              "      <td>102054</td>\n",
              "      <td>tw-95376359</td>\n",
              "      <td>Unisex</td>\n",
              "      <td>6287.0</td>\n",
              "      <td>Ndola</td>\n",
              "      <td>Copperbelt</td>\n",
              "      <td>ZM</td>\n",
              "      <td>Zambia</td>\n",
              "      <td>tw-702581824921477120</td>\n",
              "      <td>12</td>\n",
              "      <td>24</td>\n",
              "      <td>Wednesday</td>\n",
              "      <td>False</td>\n",
              "      <td>1229.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>en</td>\n",
              "      <td>I'm really really intrigued by stripe atlas......</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102055</th>\n",
              "      <td>102055</td>\n",
              "      <td>tw-456489877</td>\n",
              "      <td>Female</td>\n",
              "      <td>6288.0</td>\n",
              "      <td>Harare</td>\n",
              "      <td>Harare Province</td>\n",
              "      <td>ZW</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>tw-711965535320276993</td>\n",
              "      <td>11</td>\n",
              "      <td>21</td>\n",
              "      <td>Monday</td>\n",
              "      <td>False</td>\n",
              "      <td>479.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>43.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>en</td>\n",
              "      <td>@sir_ritz Not sure about that but they plan to...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102056</th>\n",
              "      <td>102056</td>\n",
              "      <td>tw-4504473976</td>\n",
              "      <td>Unisex</td>\n",
              "      <td>6288.0</td>\n",
              "      <td>Harare</td>\n",
              "      <td>Harare Province</td>\n",
              "      <td>ZW</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>tw-693440798403268613</td>\n",
              "      <td>7</td>\n",
              "      <td>30</td>\n",
              "      <td>Saturday</td>\n",
              "      <td>False</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>14.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>en</td>\n",
              "      <td>Haha...tbc (me)has done it again.3 wickets hat...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102057</th>\n",
              "      <td>102057</td>\n",
              "      <td>tw-8184962</td>\n",
              "      <td>Male</td>\n",
              "      <td>6288.0</td>\n",
              "      <td>Harare</td>\n",
              "      <td>Harare Province</td>\n",
              "      <td>ZW</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>tw-696378029526933504</td>\n",
              "      <td>10</td>\n",
              "      <td>7</td>\n",
              "      <td>Sunday</td>\n",
              "      <td>True</td>\n",
              "      <td>1203.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>44.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>en</td>\n",
              "      <td>RT @Springcoil: Does anyone have a good workfl...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102059</th>\n",
              "      <td>102059</td>\n",
              "      <td>tw-148753637</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>6288.0</td>\n",
              "      <td>Harare</td>\n",
              "      <td>Harare Province</td>\n",
              "      <td>ZW</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>tw-709632884269785088</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>False</td>\n",
              "      <td>4876.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>49.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>en</td>\n",
              "      <td>Curious @benthompson does this change your opi...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>64099 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f8baa65b-c503-4a99-bdb1-028ffb176db2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f8baa65b-c503-4a99-bdb1-028ffb176db2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f8baa65b-c503-4a99-bdb1-028ffb176db2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-adbb61ee-581e-448d-b8ce-cff55ab9ff0b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-adbb61ee-581e-448d-b8ce-cff55ab9ff0b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-adbb61ee-581e-448d-b8ce-cff55ab9ff0b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_a360ecd7-0da6-47ba-b52a-a7dfe51c7c89\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data_filter')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_a360ecd7-0da6-47ba-b52a-a7dfe51c7c89 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('data_filter');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data_filter",
              "summary": "{\n  \"name\": \"data_filter\",\n  \"rows\": 64099,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29163,\n        \"min\": 0,\n        \"max\": 102059,\n        \"num_unique_values\": 64099,\n        \"samples\": [\n          85430,\n          14790,\n          35646\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"UserID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 21832,\n        \"samples\": [\n          \"tw-2209238580\",\n          \"tw-3054649483\",\n          \"tw-14267973\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Male\",\n          \"Unisex\",\n          \"Unknown\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LocationID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1317.9746397409313,\n        \"min\": 1.0,\n        \"max\": 6288.0,\n        \"num_unique_values\": 3097,\n        \"samples\": [\n          3965.0,\n          3029.0,\n          3435.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2711,\n        \"samples\": [\n          \"Colleyville\",\n          \"Wayne\",\n          \"Ansbach\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 802,\n        \"samples\": [\n          \"Budapest\",\n          \"Baja California\",\n          \"Saxony\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"StateCode\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 327,\n        \"samples\": [\n          \"GB-D6\",\n          \"CH\",\n          \"GB-Q3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 130,\n        \"samples\": [\n          \"Iraq\",\n          \"Finland\",\n          \"Burkina Faso\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TweetID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 64099,\n        \"samples\": [\n          \"tw-697618317503131648\",\n          \"tw-697855340789026816\",\n          \"tw-693371245945966594\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hour\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 0,\n        \"max\": 23,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          4,\n          19,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1,\n        \"max\": 31,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          13,\n          24,\n          18\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weekday\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Friday\",\n          \"Thursday\",\n          \"Sunday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsReshare\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reach\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 85796.88532134109,\n        \"min\": 0.0,\n        \"max\": 10342452.0,\n        \"num_unique_values\": 9942,\n        \"samples\": [\n          1560.0,\n          5168.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RetweetCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 116.35047300098782,\n        \"min\": 0.0,\n        \"max\": 26127.0,\n        \"num_unique_values\": 166,\n        \"samples\": [\n          75.0,\n          103.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Likes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.0843023326513266,\n        \"min\": 0.0,\n        \"max\": 131.0,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          89.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Klout\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.772417266163918,\n        \"min\": 0.0,\n        \"max\": 99.0,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          71.0,\n          44.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sentiment\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1023134657092846,\n        \"min\": -6.0,\n        \"max\": 7.333333,\n        \"num_unique_values\": 87,\n        \"samples\": [\n          6.333333,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lang\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"en\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 64099,\n        \"samples\": [\n          \"#Docker #container wars btwn #GOOGLE #AWS but look at #MSFT #Azure 's solution @Sphere3D at: http://www.sphere3d.com/microsoft-glassware-promotion/ https://twitter.com/barrynj730/status/697124834883596288\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Tweets = data_filter[['UserID','TweetID','text']]\n",
        "Tweets"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "A32pEUPOX72Z",
        "outputId": "6389a22e-3b6d-4552-b599-d103445f5126"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               UserID                TweetID  \\\n",
              "0       tw-1267804344  tw-698155297102295041   \n",
              "1         tw-27229880  tw-685159757209059329   \n",
              "2         tw-27229880  tw-686907710311378944   \n",
              "3         tw-27229880  tw-686968158050201600   \n",
              "4         tw-27229880  tw-690210449674092545   \n",
              "...               ...                    ...   \n",
              "102054    tw-95376359  tw-702581824921477120   \n",
              "102055   tw-456489877  tw-711965535320276993   \n",
              "102056  tw-4504473976  tw-693440798403268613   \n",
              "102057     tw-8184962  tw-696378029526933504   \n",
              "102059   tw-148753637  tw-709632884269785088   \n",
              "\n",
              "                                                     text  \n",
              "0       \"RT @AdrianRusso82: Our Innovation Lab is offi...  \n",
              "1       Now Open  AWS Asia Pacific (Seoul) Region via ...  \n",
              "2       A Beginner's Guide to Scaling to 11 Million+ U...  \n",
              "3       Bridging AWS and Azure environments via VPN vi...  \n",
              "4       ELK on AWS ElasticSearch Service + ElasticBean...  \n",
              "...                                                   ...  \n",
              "102054  I'm really really intrigued by stripe atlas......  \n",
              "102055  @sir_ritz Not sure about that but they plan to...  \n",
              "102056  Haha...tbc (me)has done it again.3 wickets hat...  \n",
              "102057  RT @Springcoil: Does anyone have a good workfl...  \n",
              "102059  Curious @benthompson does this change your opi...  \n",
              "\n",
              "[64099 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2af04234-2935-44cd-b5d9-682fda9cc728\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>UserID</th>\n",
              "      <th>TweetID</th>\n",
              "      <th>text</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>tw-1267804344</td>\n",
              "      <td>tw-698155297102295041</td>\n",
              "      <td>\"RT @AdrianRusso82: Our Innovation Lab is offi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>tw-685159757209059329</td>\n",
              "      <td>Now Open  AWS Asia Pacific (Seoul) Region via ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>tw-686907710311378944</td>\n",
              "      <td>A Beginner's Guide to Scaling to 11 Million+ U...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>tw-686968158050201600</td>\n",
              "      <td>Bridging AWS and Azure environments via VPN vi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>tw-27229880</td>\n",
              "      <td>tw-690210449674092545</td>\n",
              "      <td>ELK on AWS ElasticSearch Service + ElasticBean...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102054</th>\n",
              "      <td>tw-95376359</td>\n",
              "      <td>tw-702581824921477120</td>\n",
              "      <td>I'm really really intrigued by stripe atlas......</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102055</th>\n",
              "      <td>tw-456489877</td>\n",
              "      <td>tw-711965535320276993</td>\n",
              "      <td>@sir_ritz Not sure about that but they plan to...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102056</th>\n",
              "      <td>tw-4504473976</td>\n",
              "      <td>tw-693440798403268613</td>\n",
              "      <td>Haha...tbc (me)has done it again.3 wickets hat...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102057</th>\n",
              "      <td>tw-8184962</td>\n",
              "      <td>tw-696378029526933504</td>\n",
              "      <td>RT @Springcoil: Does anyone have a good workfl...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102059</th>\n",
              "      <td>tw-148753637</td>\n",
              "      <td>tw-709632884269785088</td>\n",
              "      <td>Curious @benthompson does this change your opi...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>64099 rows × 3 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2af04234-2935-44cd-b5d9-682fda9cc728')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2af04234-2935-44cd-b5d9-682fda9cc728 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2af04234-2935-44cd-b5d9-682fda9cc728');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-72d5548d-36e8-4556-ba45-c85ccdb7f24e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-72d5548d-36e8-4556-ba45-c85ccdb7f24e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-72d5548d-36e8-4556-ba45-c85ccdb7f24e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_b513c275-a891-4285-9215-6d418af6f950\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Tweets')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_b513c275-a891-4285-9215-6d418af6f950 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('Tweets');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "Tweets",
              "summary": "{\n  \"name\": \"Tweets\",\n  \"rows\": 64099,\n  \"fields\": [\n    {\n      \"column\": \"UserID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 21832,\n        \"samples\": [\n          \"tw-2209238580\",\n          \"tw-3054649483\",\n          \"tw-14267973\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TweetID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 64099,\n        \"samples\": [\n          \"tw-697618317503131648\",\n          \"tw-697855340789026816\",\n          \"tw-693371245945966594\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 64099,\n        \"samples\": [\n          \"#Docker #container wars btwn #GOOGLE #AWS but look at #MSFT #Azure 's solution @Sphere3D at: http://www.sphere3d.com/microsoft-glassware-promotion/ https://twitter.com/barrynj730/status/697124834883596288\",\n          \"Currently looking to hire a BI Analyst for an eCommerce customer in Berlin - 3 months - Freelance - Start ASAP. Hadoop Hive Spark AWS ...\",\n          \"Docker VS AWS Lambda for Microservices http://www.linkedin.com/\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Tweets = Tweets.sample(n=18000)"
      ],
      "metadata": {
        "id": "x2tam5exX745"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Tweets.reset_index(drop=True, inplace=True)"
      ],
      "metadata": {
        "id": "FhaNCN0eX775"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.feature_extraction.text import CountVectorizer\n",
        "Tweets_text = Tweets['text']\n",
        "#initialize vectorizer\n",
        "vect = CountVectorizer(analyzer = 'word', ngram_range = (1,2), stop_words = 'english', min_df = 0.002)\n",
        "vect.fit(Tweets_text)\n",
        "text_matrix = vect.transform(Tweets_text)\n",
        "text_matrix.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AJHjbGeYX7-y",
        "outputId": "6f5ce7e3-c6b1-4e05-b915-c7c3a1afc128"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(18000, 1784)"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Lets find vocabulary/features\n",
        "features = vect.get_feature_names_out()\n",
        "features"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0IPHM1A-X8BL",
        "outputId": "dce2f970-f51e-406a-f866-dbdc2c98aa58"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['01', '01 13', '01 14', ..., 'zombie apocalypse', 'zombies',\n",
              "       'zombies rise'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics.pairwise import cosine_similarity\n",
        "cosine_sim_titles = cosine_similarity(text_matrix, text_matrix)\n",
        "cosine_sim_titles.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "v_OrJo-0Xxhh",
        "outputId": "5ed6cc77-da58-4248-8ed2-9c62ae4b925e"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(18000, 18000)"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Get books which are similar to a given title\n",
        "id = 100\n",
        "Tweets['text'].iloc[id]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 53
        },
        "id": "xMI4X_boYIMo",
        "outputId": "4394f193-bd41-45df-e680-1eacd73c4476"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Riverbed Adds Support for AWS Azure to SteelFusion http://www.scoop.it/t/cloud-and-data-center-topics/p/4060900968/2016/03/09/riverbed-adds-support-for-aws-azure-to-steelfusion?utm_medium=social&utm_source=twitter'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Find out what features have been considered  by the vectorizer for a given title ?\n",
        "feature_array = np.squeeze(text_matrix[id].toarray()) #squeeze activity matrix into array\n",
        "idx = np.where(feature_array > 0)\n",
        "idx[0]\n",
        "[features[x] for x in idx[0]]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sZXCBYXBYIPL",
        "outputId": "5458e80f-0a08-49c5-ad20-8a1268b4e3b1"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['03',\n",
              " '09',\n",
              " '2016',\n",
              " '2016 03',\n",
              " 'adds',\n",
              " 'aws',\n",
              " 'aws azure',\n",
              " 'azure',\n",
              " 'center',\n",
              " 'cloud',\n",
              " 'cloud data',\n",
              " 'data',\n",
              " 'data center',\n",
              " 'http',\n",
              " 'http www',\n",
              " 'social',\n",
              " 'social utm_source',\n",
              " 'support',\n",
              " 'support aws',\n",
              " 'twitter',\n",
              " 'utm_medium',\n",
              " 'utm_medium social',\n",
              " 'utm_source',\n",
              " 'utm_source twitter',\n",
              " 'www']"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Find index of feature\n",
        "idx[0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "guITKBL_YIRz",
        "outputId": "f64a4cd9-8c0f-4ee1-9f79-15e24c7c6701"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([  14,   27,   58,   61,  136,  227,  239,  344,  431,  463,  468,\n",
              "        605,  607,  867,  884, 1467, 1469, 1534, 1535, 1608, 1657, 1661,\n",
              "       1665, 1669, 1728])"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Cosine similarity with other similar titles\n",
        "n = 15 #how many books to be recommended\n",
        "top_n_idx = np.flip(np.argsort(cosine_sim_titles[id,]), axis = 0)[0:n]\n",
        "top_n_sim_values = cosine_sim_titles[id, top_n_idx]\n",
        "top_n_sim_values"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CHWeowVpYSRZ",
        "outputId": "101a1d08-96dc-4f99-f508-c00a751d0883"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1.        , 0.74930754, 0.72175497, 0.71165999, 0.672779  ,\n",
              "       0.65796347, 0.56709319, 0.55176059, 0.54559547, 0.53093187,\n",
              "       0.52900374, 0.52827054, 0.52827054, 0.52827054, 0.52827054])"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#find top n with values > 0\n",
        "top_n_idx = top_n_idx[top_n_sim_values > 0]\n",
        "#Matching books\n",
        "Tweets['text'].iloc[top_n_idx]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-lUP3Kq5YSUn",
        "outputId": "52039bb0-78e9-40f9-db1d-31585c476c46"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "100      Riverbed Adds Support for AWS Azure to SteelFu...\n",
              "6591     Riverbed Adds Support for AWS Azure to SteelFu...\n",
              "16608    .@riverbed adds #AWS and #Azure support to its...\n",
              "284      RT @ITKE: .@riverbed adds #AWS and #Azure supp...\n",
              "620      Riverbed SteelFusion Adds Support for AWS and ...\n",
              "15058    Our support of AWS &amp; Azure gives you a sec...\n",
              "6443     #DataStorage Riverbed adds AWS and Azure suppo...\n",
              "8455     RT @virtualisedgeek: .@velostrata support AWS ...\n",
              "2370     Blog: And in the beginning there was #AWS and ...\n",
              "15719    Riverbed extends its SteelFusion edge solution...\n",
              "9880     There's money in improving WAN connectivity to...\n",
              "13999    @stevie_chambers or pointing your Commvault or...\n",
              "13850       @LeahanneHobson and how much is AWS or Azure !\n",
              "16983       @iseff Some of it is on AWS some on Azure etc.\n",
              "11588    Rackspace rolls out Fanatical Support for AWS ...\n",
              "Name: text, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def return_sim_Tweets(id, text_matrix, vectorizer, top_n=10):\n",
        "    # generate sim matrix\n",
        "    sim_matrix = cosine_similarity(text_matrix, text_matrix)\n",
        "    features = vectorizer.get_feature_names_out()\n",
        "\n",
        "    top_n_idx = np.flip(np.argsort(sim_matrix[id]), axis=0)[:top_n]\n",
        "    top_n_sim_values = sim_matrix[id, top_n_idx]\n",
        "\n",
        "    # find top n with values > 0\n",
        "    top_n_idx = top_n_idx[top_n_sim_values > 0]\n",
        "    scores = top_n_sim_values[top_n_sim_values > 0]\n",
        "\n",
        "    # find features from the vectorized matrix\n",
        "    words = []\n",
        "    for tweet_idx in top_n_idx:\n",
        "        try:\n",
        "            feature_array = np.squeeze(text_matrix[tweet_idx].toarray())\n",
        "        except AttributeError:\n",
        "            feature_array = np.squeeze(text_matrix[tweet_idx])\n",
        "        idx = np.where(feature_array > 0)\n",
        "        words.append(\", \".join([features[i] for i in idx[0]]))\n",
        "\n",
        "    # collate results\n",
        "    res = pd.DataFrame({\n",
        "        \"Tweet_text\": Tweets['text'].iloc[id],\n",
        "        \"sim_Tweet_text\": Tweets['text'].iloc[top_n_idx].values,\n",
        "        \"scores\": scores,\n",
        "        \"words\": words\n",
        "    })\n",
        "\n",
        "    return res"
      ],
      "metadata": {
        "id": "0VMlH3NBYSXE"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "return_sim_Tweets(41,text_matrix,vect,top_n=7)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        },
        "id": "rXJ6Viw5YXap",
        "outputId": "10f65efc-f14a-43c4-d556-d0a6e7c3037c"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                          Tweet_text  \\\n",
              "0  RT @Zeebra_Prague: Don't forget - the breakfas...   \n",
              "1  RT @Zeebra_Prague: Don't forget - the breakfas...   \n",
              "2  RT @Zeebra_Prague: Don't forget - the breakfas...   \n",
              "3  RT @Zeebra_Prague: Don't forget - the breakfas...   \n",
              "4  RT @Zeebra_Prague: Don't forget - the breakfas...   \n",
              "5  RT @Zeebra_Prague: Don't forget - the breakfas...   \n",
              "6  RT @Zeebra_Prague: Don't forget - the breakfas...   \n",
              "\n",
              "                                      sim_Tweet_text    scores  \\\n",
              "0  RT @Zeebra_Prague: Don't forget - the breakfas...  1.000000   \n",
              "1  Boost Your Productivity With Amazon Web Servic...  0.741941   \n",
              "2  RT @AmazonOmy: AWS of #IoT and other acronyms....  0.708918   \n",
              "3  \"AWS made a strong case  portfolio of software...  0.707107   \n",
              "4  You can run anything you dream of running on #...  0.692820   \n",
              "5  Kostenloses E-Handbook #Softwareentwicklung mi...  0.686946   \n",
              "6  RT @osalkk: Amazon Web Services CloudFormation...  0.674200   \n",
              "\n",
              "                                               words  \n",
              "0  amazon, amazon web, aws, don, hootsuite, http,...  \n",
              "1  amazon, amazon web, blogs, com, data, hootsuit...  \n",
              "2  amazon, amazon cloud, amazon web, aws, aws iot...  \n",
              "3  amazon, amazon web, aws, aws lambda, case, hoo...  \n",
              "4  amazon, amazon web, aws, cloudcomputing, com, ...  \n",
              "5  amazon, amazon web, aws, aws http, http, http ...  \n",
              "6  amazon, amazon web, aws, aws cloud, cloud, clo...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e8ab00d7-ffe5-4f15-9382-7cbac4104f84\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Tweet_text</th>\n",
              "      <th>sim_Tweet_text</th>\n",
              "      <th>scores</th>\n",
              "      <th>words</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>RT @Zeebra_Prague: Don't forget - the breakfas...</td>\n",
              "      <td>RT @Zeebra_Prague: Don't forget - the breakfas...</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>amazon, amazon web, aws, don, hootsuite, http,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>RT @Zeebra_Prague: Don't forget - the breakfas...</td>\n",
              "      <td>Boost Your Productivity With Amazon Web Servic...</td>\n",
              "      <td>0.741941</td>\n",
              "      <td>amazon, amazon web, blogs, com, data, hootsuit...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>RT @Zeebra_Prague: Don't forget - the breakfas...</td>\n",
              "      <td>RT @AmazonOmy: AWS of #IoT and other acronyms....</td>\n",
              "      <td>0.708918</td>\n",
              "      <td>amazon, amazon cloud, amazon web, aws, aws iot...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>RT @Zeebra_Prague: Don't forget - the breakfas...</td>\n",
              "      <td>\"AWS made a strong case  portfolio of software...</td>\n",
              "      <td>0.707107</td>\n",
              "      <td>amazon, amazon web, aws, aws lambda, case, hoo...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>RT @Zeebra_Prague: Don't forget - the breakfas...</td>\n",
              "      <td>You can run anything you dream of running on #...</td>\n",
              "      <td>0.692820</td>\n",
              "      <td>amazon, amazon web, aws, cloudcomputing, com, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>RT @Zeebra_Prague: Don't forget - the breakfas...</td>\n",
              "      <td>Kostenloses E-Handbook #Softwareentwicklung mi...</td>\n",
              "      <td>0.686946</td>\n",
              "      <td>amazon, amazon web, aws, aws http, http, http ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>RT @Zeebra_Prague: Don't forget - the breakfas...</td>\n",
              "      <td>RT @osalkk: Amazon Web Services CloudFormation...</td>\n",
              "      <td>0.674200</td>\n",
              "      <td>amazon, amazon web, aws, aws cloud, cloud, clo...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e8ab00d7-ffe5-4f15-9382-7cbac4104f84')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e8ab00d7-ffe5-4f15-9382-7cbac4104f84 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e8ab00d7-ffe5-4f15-9382-7cbac4104f84');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9f6eaf16-3a12-464c-8dff-e2649ed2b91b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9f6eaf16-3a12-464c-8dff-e2649ed2b91b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9f6eaf16-3a12-464c-8dff-e2649ed2b91b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"return_sim_Tweets(41,text_matrix,vect,top_n=7)\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"Tweet_text\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"RT @Zeebra_Prague: Don't forget - the breakfast with theme How #MSD uses #AWS will take place on next Tuesday! http://www.datascript.cz/morning-talks/amazon-web-services-v-praxi/?platform=hootsuite\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sim_Tweet_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"RT @Zeebra_Prague: Don't forget - the breakfast with theme How #MSD uses #AWS will take place on next Tuesday! http://www.datascript.cz/morning-talks/amazon-web-services-v-praxi/?platform=hootsuite\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"scores\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11465633089990082,\n        \"min\": 0.6741998624632419,\n        \"max\": 0.9999999999999998,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0.9999999999999998\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"words\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"amazon, amazon web, aws, don, hootsuite, http, http www, platform, platform hootsuite, rt, services, uses, web, web services, www\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "C6v7FezIYXdK"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}